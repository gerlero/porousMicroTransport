name: Docker

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      amd64:
        description: Build amd64 image
        type: boolean
        required: false
        default: true
      arm64:
        description: Build arm64 image
        type: boolean
        required: false
        default: false
      push:
        description: Push built images to Docker Hub
        type: boolean
        required: false
        default: false

env:
  DOCKERHUB_IMAGE: microfluidica/porousmicrotransport

  PLATFORMS: |
    ${{ (inputs.amd64 || github.event_name != 'workflow_dispatch') && 'linux/amd64' || '' }}
    ${{ (inputs.arm64 || github.event_name != 'workflow_dispatch' && github.event_name != 'pull_request') && 'linux/arm64' || '' }}

  PUSH: ${{ inputs.push || github.event_name != 'workflow_dispatch' && github.event_name != 'pull_request' }}

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKERHUB_IMAGE }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Login to DockerHub
        if: env.PUSH == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ env.PLATFORMS }}
          push: ${{ env.PUSH == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Update Docker Hub description
        if: env.PUSH == 'true'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.DOCKERHUB_IMAGE }}
